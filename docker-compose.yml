version: "3.8"

services:

  my-mongodb:
    image: mongo:latest
    container_name: mongo
    hostname: my-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data_container:/data/db
      - ./mongo-seed:/docker-entrypoint-initdb.d
    networks:
      - internal


  my-sqldb:
    image: mysql:latest
    container_name: mysql
    hostname: my-sqldb
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: patients_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - mysql_data_container:/var/lib/mysql
    networks:
      - internal


  patientsm:
    build:
      context: ./microservice-patients
      dockerfile: Dockerfile
    container_name: patientsm
    restart: on-failure
    ports:
      - "9001:9001"
    depends_on:
      - my-sqldb
    networks:
      - internal

  notes-ms:
    build:
      context: ./microservice-notes
      dockerfile: Dockerfile
    container_name: notes-ms
    restart: on-failure
    ports:
      - "9000:9000"
    depends_on:
      - my-mongodb
    networks:
      - internal

  healthrisk:
    build:
      context: ./microservice-healthrisks
      dockerfile: Dockerfile
    container_name: healthrisks
    restart: on-failure
    ports:
      - "9003:9003"
    networks:
      - internal

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    container_name: gateway
    restart: on-failure
    ports:
      - "9002:9002"
    depends_on:
      - patientsm
      - notes-ms
      - healthrisk
    networks:
      - internal

volumes:
  mongodb_data_container:
  mysql_data_container:

networks:
  internal:
    driver: bridge




